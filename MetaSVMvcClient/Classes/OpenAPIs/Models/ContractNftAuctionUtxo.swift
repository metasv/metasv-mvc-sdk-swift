//
// ContractNftAuctionUtxo.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

/** Contract nft auction Utxo belongs to the specified address */
public struct ContractNftAuctionUtxo: Codable {

    /** Address string of this utxo */
    public var address: String?
    /** Txid for this utxo. */
    public var txid: String?
    /** Output index for the Utxo. */
    public var txIndex: Int?
    /** bidMvcPrice */
    public var bidMvcPrice: Int64?
    /** bidTimestamp */
    public var bidTimestamp: Int64?
    /** bidderAddressPkh */
    public var bidderAddressPkh: String?
    /** Codehash of this utxo. */
    public var codeHash: String?
    /** Genesis of this utxo. */
    public var genesis: String?
    /** endTimestamp */
    public var endTimestamp: Int64?
    /** feeAddressPkh */
    public var feeAddressPkh: String?
    /** feeAmount */
    public var feeAmount: Int64?
    /** feeRate */
    public var feeRate: Int?
    /** The height of this utxo, -1 for unconfirmed utxo. */
    public var height: Int?
    /** nftCodeHash */
    public var nftCodeHash: String?
    /** nftId of the auctioning fnt */
    public var nftId: String?
    /** senderAddressPkh */
    public var senderAddressPkh: String?
    /** SensibleId of the utxo */
    public var sensibleId: String?
    /** startMvcPrice */
    public var startMvcPrice: Int64?
    /** Mvc value of the utxo(Irrelavant to token value) */
    public var satoshi: Int64?
    /** Mvc value of the utxo(In string format) */
    public var satoshiString: String?
    /** The hash160 of the script(p2ch address) */
    public var contractAddress: String?
    /** this the nft send to this contract address */
    public var isReady: Bool?
    /** Flag used for paging */
    public var flag: String?

    public init(address: String? = nil, txid: String? = nil, txIndex: Int? = nil, bidMvcPrice: Int64? = nil, bidTimestamp: Int64? = nil, bidderAddressPkh: String? = nil, codeHash: String? = nil, genesis: String? = nil, endTimestamp: Int64? = nil, feeAddressPkh: String? = nil, feeAmount: Int64? = nil, feeRate: Int? = nil, height: Int? = nil, nftCodeHash: String? = nil, nftId: String? = nil, senderAddressPkh: String? = nil, sensibleId: String? = nil, startMvcPrice: Int64? = nil, satoshi: Int64? = nil, satoshiString: String? = nil, contractAddress: String? = nil, isReady: Bool? = nil, flag: String? = nil) {
        self.address = address
        self.txid = txid
        self.txIndex = txIndex
        self.bidMvcPrice = bidMvcPrice
        self.bidTimestamp = bidTimestamp
        self.bidderAddressPkh = bidderAddressPkh
        self.codeHash = codeHash
        self.genesis = genesis
        self.endTimestamp = endTimestamp
        self.feeAddressPkh = feeAddressPkh
        self.feeAmount = feeAmount
        self.feeRate = feeRate
        self.height = height
        self.nftCodeHash = nftCodeHash
        self.nftId = nftId
        self.senderAddressPkh = senderAddressPkh
        self.sensibleId = sensibleId
        self.startMvcPrice = startMvcPrice
        self.satoshi = satoshi
        self.satoshiString = satoshiString
        self.contractAddress = contractAddress
        self.isReady = isReady
        self.flag = flag
    }

}

