//
// OutpointAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation



open class OutpointAPI {
    /**
     Get tx output(outpoint for vin) spent status.
     
     - parameter txid: (path) The txid of the output 
     - parameter index: (path) The index of the output in the tx. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func outpointTxidIndexGet(txid: String, index: Int, apiResponseQueue: DispatchQueue = MvcApiClientAPI.apiResponseQueue, completion: @escaping ((_ data: OutputInfo?,_ error: Error?) -> Void)) {
        outpointTxidIndexGetWithRequestBuilder(txid: txid, index: index).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get tx output(outpoint for vin) spent status.
     - GET /outpoint/{txid}/{index}
     - Get detailed info for a utxo(or txo if spent), Only outputs spent no longer than one month are available. (Premium feature will support full history)
     - BASIC:
       - type: http
       - name: bearerAuth
     - parameter txid: (path) The txid of the output 
     - parameter index: (path) The index of the output in the tx. 
     - returns: RequestBuilder<OutputInfo> 
     */
    open class func outpointTxidIndexGetWithRequestBuilder(txid: String, index: Int) -> RequestBuilder<OutputInfo> {
        var path = "/outpoint/{txid}/{index}"
        let txidPreEscape = "\(APIHelper.mapValueToPathItem(txid))"
        let txidPostEscape = txidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{txid}", with: txidPostEscape, options: .literal, range: nil)
        let indexPreEscape = "\(APIHelper.mapValueToPathItem(index))"
        let indexPostEscape = indexPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{index}", with: indexPostEscape, options: .literal, range: nil)
        let URLString = MvcApiClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<OutputInfo>.Type = MvcApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
