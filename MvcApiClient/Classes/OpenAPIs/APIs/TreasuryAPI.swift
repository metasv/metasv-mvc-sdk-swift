//
// TreasuryAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation



open class TreasuryAPI {
    /**
     Get current treasury info.
     
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func treasuryGet(apiResponseQueue: DispatchQueue = MvcApiClientAPI.apiResponseQueue, completion: @escaping ((_ data: TreasuryInfo?,_ error: Error?) -> Void)) {
        treasuryGetWithRequestBuilder().execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get current treasury info.
     - GET /treasury
     - BASIC:
       - type: http
       - name: bearerAuth
     - returns: RequestBuilder<TreasuryInfo> 
     */
    open class func treasuryGetWithRequestBuilder() -> RequestBuilder<TreasuryInfo> {
        let path = "/treasury"
        let URLString = MvcApiClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<TreasuryInfo>.Type = MvcApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Get all treasury history.
     
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func treasuryHistoryGet(apiResponseQueue: DispatchQueue = MvcApiClientAPI.apiResponseQueue, completion: @escaping ((_ data: [TreasuryHistory]?,_ error: Error?) -> Void)) {
        treasuryHistoryGetWithRequestBuilder().execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get all treasury history.
     - GET /treasury/history
     - BASIC:
       - type: http
       - name: bearerAuth
     - returns: RequestBuilder<[TreasuryHistory]> 
     */
    open class func treasuryHistoryGetWithRequestBuilder() -> RequestBuilder<[TreasuryHistory]> {
        let path = "/treasury/history"
        let URLString = MvcApiClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<[TreasuryHistory]>.Type = MvcApiClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
